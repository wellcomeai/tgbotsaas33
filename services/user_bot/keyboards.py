"""
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –∫–ª–∞–≤–∏–∞—Ç—É—Ä –¥–ª—è UserBot
"""

from typing import List, Optional
from aiogram.types import (
    InlineKeyboardMarkup, 
    InlineKeyboardButton,
    ReplyKeyboardMarkup,
    KeyboardButton
)
from config import settings, Emoji


class AdminKeyboards:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""
    
    @staticmethod
    def main_menu(has_openai_bots: bool = False) -> InlineKeyboardMarkup:
        """‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ —Å –∫–Ω–æ–ø–∫–æ–π –º–∞—Å—Å–æ–≤—ã—Ö —Ä–∞—Å—Å—ã–ª–æ–∫"""
        # –ë–∞–∑–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
        keyboard = [
            [
                InlineKeyboardButton(
                    text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π", 
                    callback_data="admin_settings"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üéØ –í–æ—Ä–æ–Ω–∫–∞ –ø—Ä–æ–¥–∞–∂", 
                    callback_data="admin_funnel"
                )
            ],
            [
                InlineKeyboardButton(
                    text="ü§ñ –ò–ò –ê–≥–µ–Ω—Ç", 
                    callback_data="admin_ai"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìù –ö–æ–Ω—Ç–µ–Ω—Ç –∫–∞–Ω–∞–ª–∞", 
                    callback_data="content_main"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üì® –ú–∞—Å—Å–æ–≤—ã–µ —Ä–∞—Å—Å—ã–ª–∫–∏", 
                    callback_data="mass_broadcast_main"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏", 
                    callback_data="admin_subscription"
                )
            ]
        ]
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    
    @staticmethod
    def settings_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", 
                    callback_data="settings_welcome"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîò –ö–Ω–æ–ø–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è", 
                    callback_data="settings_welcome_button"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è", 
                    callback_data="settings_confirmation"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üëã –ü—Ä–æ—â–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ", 
                    callback_data="settings_goodbye"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîó –ö–Ω–æ–ø–∫–∞ –ø—Ä–æ—â–∞–Ω–∏—è", 
                    callback_data="settings_goodbye_button"
                )
            ],
            [
                InlineKeyboardButton(
                    text=f"{Emoji.BACK} –ù–∞–∑–∞–¥", 
                    callback_data="admin_main"
                )
            ]
        ])
    
    # ===== SUBSCRIPTION SETTINGS KEYBOARDS =====
    
    @staticmethod
    def subscription_settings_menu(enabled: bool) -> InlineKeyboardMarkup:
        """‚úÖ –ù–û–í–û–ï: –ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏"""
        toggle_text = "‚ùå –í—ã–∫–ª—é—á–∏—Ç—å" if enabled else "‚úÖ –í–∫–ª—é—á–∏—Ç—å"
        
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text=f"{toggle_text} –ø—Ä–æ–≤–µ—Ä–∫—É", callback_data="toggle_subscription")],
            [InlineKeyboardButton(text="üì∫ –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–∞–Ω–∞–ª", callback_data="set_subscription_channel")],
            [InlineKeyboardButton(text="‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ", callback_data="edit_subscription_message")],
            [InlineKeyboardButton(text=f"{Emoji.BACK} –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="admin_main")]
        ])
    
    @staticmethod
    def subscription_cancel() -> InlineKeyboardMarkup:
        """‚úÖ –ù–û–í–û–ï: –ö–Ω–æ–ø–∫–∞ –æ—Ç–º–µ–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="admin_subscription")]
        ])
    
    @staticmethod
    def subscription_channel_configured() -> InlineKeyboardMarkup:
        """‚úÖ –ù–û–í–û–ï: –ö–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–∞–Ω–∞–ª–∞"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="‚úÖ –í–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–≤–µ—Ä–∫—É", callback_data="toggle_subscription")],
            [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏", callback_data="admin_subscription")],
            [InlineKeyboardButton(text=f"{Emoji.BACK} –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="admin_main")]
        ])
    
    # ===== CONTENT AGENT KEYBOARDS =====
    
    @staticmethod
    def content_main_menu_no_agent() -> InlineKeyboardMarkup:
        """‚úÖ –ù–û–í–û–ï: –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –±–µ–∑ –∞–≥–µ–Ω—Ç–∞"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚ú® –°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç-–∞–≥–µ–Ω—Ç–∞", 
                    callback_data="content_create_agent"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ÑπÔ∏è –ß—Ç–æ —Ç–∞–∫–æ–µ –∫–æ–Ω—Ç–µ–Ω—Ç-–∞–≥–µ–Ω—Ç?", 
                    callback_data="content_info"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥", 
                    callback_data="admin_main"
                )
            ]
        ])
    
    @staticmethod
    def content_main_menu_with_agent() -> InlineKeyboardMarkup:
        """‚úÖ –ù–û–í–û–ï: –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —Å –∞–≥–µ–Ω—Ç–æ–º"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìù –ü–µ—Ä–µ–ø–∏—Å–∞—Ç—å –ø–æ—Å—Ç", 
                    callback_data="content_rewrite"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–≥–µ–Ω—Ç–æ–º", 
                    callback_data="content_manage"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", 
                    callback_data="content_stats"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥", 
                    callback_data="admin_main"
                )
            ]
        ])
    
    @staticmethod
    def content_create_confirmation() -> InlineKeyboardMarkup:
        """‚úÖ –ù–û–í–û–ï: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úÖ –î–∞, —Å–æ–∑–¥–∞—Ç—å –∞–≥–µ–Ω—Ç–∞", 
                    callback_data="content_confirm_create"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ùå –û—Ç–º–µ–Ω–∞", 
                    callback_data="content_main"
                )
            ]
        ])
    
    @staticmethod
    def content_manage_menu() -> InlineKeyboardMarkup:
        """‚úÖ –ù–û–í–û–ï: –ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–æ–º"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úèÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≥–µ–Ω—Ç–∞", 
                    callback_data="content_settings"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å", 
                    callback_data="content_test"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∞–≥–µ–Ω—Ç–∞", 
                    callback_data="content_delete_agent"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥", 
                    callback_data="content_main"
                )
            ]
        ])
    
    @staticmethod
    def content_settings_menu() -> InlineKeyboardMarkup:
        """‚úÖ –ù–û–í–û–ï: –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≥–µ–Ω—Ç–∞"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üìù –ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è", 
                    callback_data="content_edit_name"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìã –ò–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏", 
                    callback_data="content_edit_instructions"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîó OpenAI Agent ID", 
                    callback_data="content_edit_openai_id"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥", 
                    callback_data="content_manage"
                )
            ]
        ])
    
    @staticmethod
    def content_delete_confirmation() -> InlineKeyboardMarkup:
        """‚úÖ –ù–û–í–û–ï: –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–∞"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üóëÔ∏è –î–∞, —É–¥–∞–ª–∏—Ç—å –Ω–∞–≤—Å–µ–≥–¥–∞", 
                    callback_data="content_confirm_delete"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ùå –û—Ç–º–µ–Ω–∞", 
                    callback_data="content_manage"
                )
            ]
        ])
    
    @staticmethod
    def content_rewrite_mode() -> InlineKeyboardMarkup:
        """‚úÖ –ù–û–í–û–ï: –†–µ–∂–∏–º –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–Ω–∏—è –ø–æ—Å—Ç–æ–≤"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üö™ –ó–∞–≤–µ—Ä—à–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–Ω–∏–µ", 
                    callback_data="content_exit_rewrite"
                )
            ]
        ])
    
    @staticmethod
    def content_post_actions() -> InlineKeyboardMarkup:
        """‚úÖ –ù–û–í–û–ï: –ö–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ —Ä–µ—Ä–∞–π—Ç–∞ –ø–æ—Å—Ç–∞"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úèÔ∏è –í–Ω–µ—Å—Ç–∏ –ø—Ä–∞–≤–∫–∏", 
                    callback_data="content_edit_post"
                ),
                InlineKeyboardButton(
                    text="üì§ –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å", 
                    callback_data="content_publish"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üîÑ –†–µ–∂–∏–º —Ä–µ—Ä–∞–π—Ç–∞", 
                    callback_data="content_rewrite"
                )
            ]
        ])
    
    @staticmethod  
    def content_back_to_rewrite() -> InlineKeyboardMarkup:
        """‚úÖ –ù–û–í–û–ï: –í–æ–∑–≤—Ä–∞—Ç –∫ —Ä–µ–∂–∏–º—É —Ä–µ—Ä–∞–π—Ç–∞"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ö —Ä–µ—Ä–∞–π—Ç—É", 
                    callback_data="content_rewrite"
                )
            ]
        ])
    
    @staticmethod
    def content_test_mode() -> InlineKeyboardMarkup:
        """‚úÖ –ù–û–í–û–ï: –†–µ–∂–∏–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∞–≥–µ–Ω—Ç–∞"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üö™ –ó–∞–≤–µ—Ä—à–∏—Ç—å —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", 
                    callback_data="content_exit_test"
                )
            ]
        ])
    
    @staticmethod
    def content_back_to_main() -> InlineKeyboardMarkup:
        """‚úÖ –ù–û–í–û–ï: –ù–∞–∑–∞–¥ –∫ –≥–ª–∞–≤–Ω–æ–º—É –º–µ–Ω—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –∫–æ–Ω—Ç–µ–Ω—Ç—É", 
                    callback_data="content_main"
                )
            ]
        ])
    
    @staticmethod
    def content_stats_menu() -> InlineKeyboardMarkup:
        """‚úÖ –ù–û–í–û–ï: –ú–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç-–∞–≥–µ–Ω—Ç–∞"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å", 
                    callback_data="content_stats"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥", 
                    callback_data="content_main"
                )
            ]
        ])
    
    @staticmethod
    def content_info_menu() -> InlineKeyboardMarkup:
        """‚úÖ –ù–û–í–û–ï: –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–Ω—Ç–µ–Ω—Ç-–∞–≥–µ–Ω—Ç–µ"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚ú® –°–æ–∑–¥–∞—Ç—å –∞–≥–µ–Ω—Ç–∞", 
                    callback_data="content_create_agent"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥", 
                    callback_data="content_main"
                )
            ]
        ])

    # ===== MASS BROADCAST KEYBOARDS =====

    @staticmethod
    def mass_broadcast_main_menu() -> InlineKeyboardMarkup:
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –º–∞—Å—Å–æ–≤—ã—Ö —Ä–∞—Å—Å—ã–ª–æ–∫ - –û–ë–ù–û–í–õ–ï–ù–û: —É–±—Ä–∞–Ω—ã –∫–Ω–æ–ø–∫–∏ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–∞—Å—Å—ã–ª–æ–∫"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üöÄ –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞", 
                    callback_data="mass_broadcast_instant"
                )
            ],
            [
                InlineKeyboardButton(
                    text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∞—Å—Å—ã–ª–æ–∫", 
                    callback_data="mass_broadcast_stats"
                )
            ],
            [
                InlineKeyboardButton(
                    text=f"{Emoji.BACK} –ù–∞–∑–∞–¥", 
                    callback_data="admin_main"
                )
            ]
        ])

    @staticmethod
    def mass_broadcast_creation_menu(broadcast_type: str, has_text: bool = False, has_media: bool = False, has_button: bool = False) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏"""
        keyboard = []
        
        # –¢–µ–∫—Å—Ç
        text_icon = "‚úÖ" if has_text else "üìù"
        keyboard.append([
            InlineKeyboardButton(
                text=f"{text_icon} –¢–µ–∫—Å—Ç —Ä–∞—Å—Å—ã–ª–∫–∏",
                callback_data=f"mass_broadcast_{broadcast_type}_text"
            )
        ])
        
        # –ú–µ–¥–∏–∞
        media_icon = "‚úÖ" if has_media else "üìé"
        keyboard.append([
            InlineKeyboardButton(
                text=f"{media_icon} –ú–µ–¥–∏–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
                callback_data=f"mass_broadcast_{broadcast_type}_media"
            )
        ])
        
        # –ö–Ω–æ–ø–∫–∞
        button_icon = "‚úÖ" if has_button else "üîò"
        keyboard.append([
            InlineKeyboardButton(
                text=f"{button_icon} Inline –∫–Ω–æ–ø–∫–∞ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
                callback_data=f"mass_broadcast_{broadcast_type}_button"
            )
        ])
        
        # –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–∫—Å—Ç)
        if has_text:
            keyboard.append([
                InlineKeyboardButton(
                    text="üëÅÔ∏è –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä",
                    callback_data=f"mass_broadcast_{broadcast_type}_preview"
                )
            ])
        
        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        if broadcast_type == "instant" and has_text:
            keyboard.append([
                InlineKeyboardButton(
                    text="üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ–π—á–∞—Å",
                    callback_data=f"mass_broadcast_instant_send"
                )
            ])
        elif broadcast_type == "scheduled" and has_text:
            keyboard.append([
                InlineKeyboardButton(
                    text="‚è∞ –£–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏",
                    callback_data=f"mass_broadcast_scheduled_datetime"
                )
            ])
        
        # –û—Ç–º–µ–Ω–∞
        keyboard.append([
            InlineKeyboardButton(
                text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
                callback_data="mass_broadcast_main"
            )
        ])
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def mass_broadcast_preview_menu(broadcast_type: str, broadcast_id: int = None) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ä–∞—Å—Å—ã–ª–∫–∏"""
        keyboard = []
        
        if broadcast_type == "instant":
            keyboard.append([
                InlineKeyboardButton(
                    text="üöÄ –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ–π—á–∞—Å",
                    callback_data=f"mass_broadcast_send_instant_{broadcast_id}" if broadcast_id else "mass_broadcast_instant_send"
                )
            ])
        elif broadcast_type == "scheduled":
            keyboard.append([
                InlineKeyboardButton(
                    text="‚è∞ –£–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏",
                    callback_data=f"mass_broadcast_scheduled_datetime"
                )
            ])
        
        keyboard.extend([
            [
                InlineKeyboardButton(
                    text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å",
                    callback_data=f"mass_broadcast_{broadcast_type}_edit"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
                    callback_data="mass_broadcast_main"
                )
            ]
        ])
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def mass_broadcast_button_setup_menu(broadcast_type: str) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–Ω–æ–ø–∫–∏"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üóëÔ∏è –£–±—Ä–∞—Ç—å –∫–Ω–æ–ø–∫—É",
                    callback_data=f"mass_broadcast_{broadcast_type}_remove_button"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
                    callback_data=f"mass_broadcast_{broadcast_type}_menu"
                )
            ]
        ])

    @staticmethod
    def mass_broadcast_media_setup_menu(broadcast_type: str) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–µ–¥–∏–∞"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üóëÔ∏è –£–±—Ä–∞—Ç—å –º–µ–¥–∏–∞",
                    callback_data=f"mass_broadcast_{broadcast_type}_remove_media"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
                    callback_data=f"mass_broadcast_{broadcast_type}_menu"
                )
            ]
        ])

    @staticmethod
    def mass_broadcast_scheduled_list(broadcasts: list) -> InlineKeyboardMarkup:
        """–°–ø–∏—Å–æ–∫ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–∞—Å—Å—ã–ª–æ–∫"""
        keyboard = []
        
        for broadcast in broadcasts:
            scheduled_time = broadcast.scheduled_at.strftime("%d.%m %H:%M")
            preview = broadcast.get_preview_text(30)
            
            keyboard.append([
                InlineKeyboardButton(
                    text=f"{scheduled_time} - {preview}",
                    callback_data=f"mass_broadcast_scheduled_view_{broadcast.id}"
                )
            ])
        
        if not broadcasts:
            keyboard.append([
                InlineKeyboardButton(
                    text="üìù –ù–µ—Ç –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–∞—Å—Å—ã–ª–æ–∫",
                    callback_data="mass_broadcast_scheduled"
                )
            ])
        
        keyboard.append([
            InlineKeyboardButton(
                text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
                callback_data="mass_broadcast_main"
            )
        ])
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)

    @staticmethod
    def mass_broadcast_scheduled_view_menu(broadcast_id: int) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üóëÔ∏è –û—Ç–º–µ–Ω–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É",
                    callback_data=f"mass_broadcast_cancel_{broadcast_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ö —Å–ø–∏—Å–∫—É",
                    callback_data="mass_broadcast_list_scheduled"
                )
            ]
        ])

    @staticmethod
    def mass_broadcast_confirm_send(broadcast_id: int) -> InlineKeyboardMarkup:
        """–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="‚úÖ –î–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å",
                    callback_data=f"mass_broadcast_confirm_send_{broadcast_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
                    callback_data=f"mass_broadcast_instant_preview_{broadcast_id}"
                )
            ]
        ])

    @staticmethod
    def mass_broadcast_stats_menu() -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–∞—Å—Å—ã–ª–æ–∫"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å",
                    callback_data="mass_broadcast_stats"
                )
            ],
            [
                InlineKeyboardButton(
                    text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
                    callback_data="mass_broadcast_main"
                )
            ]
        ])


class FunnelKeyboards:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤–æ—Ä–æ–Ω–∫–∏ –ø—Ä–æ–¥–∞–∂"""
    
    @staticmethod
    def main_menu() -> InlineKeyboardMarkup:
        """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤–æ—Ä–æ–Ω–∫–∏"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text=f"{Emoji.LIST} –°–æ–æ–±—â–µ–Ω–∏—è –≤–æ—Ä–æ–Ω–∫–∏",
                    callback_data="funnel_messages"
                )
            ],
            [
                InlineKeyboardButton(
                    text=f"{Emoji.PLUS} –î–æ–±–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ",
                    callback_data="funnel_add"
                ),
                InlineKeyboardButton(
                    text=f"{Emoji.STATISTICS} –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                    callback_data="funnel_stats"
                )
            ],
            [
                InlineKeyboardButton(
                    text=f"{Emoji.SETTINGS} –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –≤–æ—Ä–æ–Ω–∫–∏",
                    callback_data="funnel_settings"
                )
            ],
            [
                InlineKeyboardButton(
                    text=f"{Emoji.BACK} –ù–∞–∑–∞–¥",
                    callback_data="admin_main"
                )
            ]
        ])
    
    @staticmethod
    def message_menu(message_id: int) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–µ–º"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [
                InlineKeyboardButton(
                    text=f"{Emoji.PREVIEW} –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä",
                    callback_data=f"msg_preview_{message_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text=f"{Emoji.EDIT} –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç",
                    callback_data=f"msg_edit_text_{message_id}"
                ),
                InlineKeyboardButton(
                    text=f"{Emoji.CLOCK} –ò–∑–º–µ–Ω–∏—Ç—å –∑–∞–¥–µ—Ä–∂–∫—É",
                    callback_data=f"msg_edit_delay_{message_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text=f"{Emoji.MEDIA} –ú–µ–¥–∏–∞",
                    callback_data=f"msg_media_{message_id}"
                ),
                InlineKeyboardButton(
                    text=f"{Emoji.BUTTON} –ö–Ω–æ–ø–∫–∏",
                    callback_data=f"msg_buttons_{message_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text=f"{Emoji.COPY} –î—É–±–ª–∏—Ä–æ–≤–∞—Ç—å",
                    callback_data=f"msg_duplicate_{message_id}"
                ),
                InlineKeyboardButton(
                    text=f"{Emoji.DELETE} –£–¥–∞–ª–∏—Ç—å",
                    callback_data=f"msg_delete_{message_id}"
                )
            ],
            [
                InlineKeyboardButton(
                    text=f"{Emoji.BACK} –ö –≤–æ—Ä–æ–Ω–∫–µ",
                    callback_data="funnel_messages"
                )
            ]
        ])
    
    @staticmethod
    def message_buttons_menu(message_id: int, buttons: list) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∞–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è"""
        keyboard = []
        
        for i, button in enumerate(buttons, 1):
            button_text = button.button_text[:20] if button.button_text else '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'
            button_id = button.id
            keyboard.append([
                InlineKeyboardButton(
                    text=f"{i}. {button_text}...",
                    callback_data=f"btn_edit_{button_id}"
                ),
                InlineKeyboardButton(
                    text=f"{Emoji.DELETE}",
                    callback_data=f"btn_delete_{button_id}"
                )
            ])
        
        # Add button for adding new
        if len(buttons) < settings.max_buttons_per_message:
            keyboard.append([
                InlineKeyboardButton(
                    text=f"{Emoji.PLUS} –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É",
                    callback_data=f"btn_add_{message_id}"
                )
            ])
        
        keyboard.append([
            InlineKeyboardButton(
                text=f"{Emoji.BACK} –ö —Å–æ–æ–±—â–µ–Ω–∏—é",
                callback_data=f"msg_view_{message_id}"
            )
        ])
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)


class AIKeyboards:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ò–ò –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞"""
    
    @staticmethod
    def settings_menu(ai_enabled: bool, is_configured: bool, platform: str = None, daily_limit: int = None) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ò–ò (—É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–µ, –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏) - –£–°–¢–ê–†–ï–õ–û"""
        # –ò–ó–ú–ï–ù–ï–ù–û: –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±–æ–ª—å—à–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è, –Ω–æ –æ—Å—Ç–∞–≤–ª—è–µ–º –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
        return AIKeyboards.chatforyou_settings_menu(is_configured, platform)
    
    @staticmethod
    def chatforyou_settings_menu(is_configured: bool, platform: str = None) -> InlineKeyboardMarkup:
        """–ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ ChatForYou –∞–≥–µ–Ω—Ç–∞ - –ò–ó–ú–ï–ù–ï–ù–û: —É–±—Ä–∞–Ω–∞ –ª–æ–≥–∏–∫–∞ –≤–∫–ª—é—á–µ–Ω/–≤—ã–∫–ª—é—á–µ–Ω"""
        config_status = "‚úÖ –ù–∞—Å—Ç—Ä–æ–µ–Ω" if is_configured else "‚ùå –ù–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω"
        
        platform_info = ""
        if platform:
            platform_names = {
                'chatforyou': 'ChatForYou',
                'protalk': 'ProTalk'
            }
            platform_info = f" ({platform_names.get(platform, platform)})"
        
        keyboard = [
            [
                InlineKeyboardButton(
                    text=f"üîë –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {config_status}{platform_info}",
                    callback_data="ai_set_id"
                )
            ]
        ]
        
        # Test button only if fully configured
        if is_configured:
            keyboard.extend([
                [
                    InlineKeyboardButton(
                        text="üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ò–ò",
                        callback_data="ai_test"
                    )
                ],
                [
                    InlineKeyboardButton(
                        text="üìä –õ–∏–º–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–π",
                        callback_data="ai_message_limit"
                    )
                ]
            ])
        
        # –ù–û–í–û–ï: –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –µ—Å–ª–∏ –∞–≥–µ–Ω—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω
        if is_configured:
            keyboard.append([
                InlineKeyboardButton(
                    text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∞–≥–µ–Ω—Ç–∞",
                    callback_data="ai_delete"
                )
            ])
        
        keyboard.append([
            InlineKeyboardButton(
                text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
                callback_data="admin_main"
            )
        ])
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    
    @staticmethod
    def openai_settings_menu(has_agent: bool) -> InlineKeyboardMarkup:
        """‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –ú–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫ OpenAI –∞–≥–µ–Ω—Ç–∞"""
        if has_agent:
            keyboard = [
                [InlineKeyboardButton(text="üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ò–ò", callback_data="openai_test")],
                [InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="openai_edit")],
                [InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∞–≥–µ–Ω—Ç–∞", callback_data="openai_delete")],
                [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_panel")]
            ]
        else:
            keyboard = [
                [InlineKeyboardButton(text="üé® –°–æ–∑–¥–∞—Ç—å –∞–≥–µ–Ω—Ç–∞", callback_data="openai_create")],
                [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_panel")]
            ]
        
        return InlineKeyboardMarkup(inline_keyboard=keyboard)
    
    @staticmethod
    def conversation_menu() -> ReplyKeyboardMarkup:
        """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ —Å –ò–ò (reply –∫–Ω–æ–ø–∫–∏)"""
        return ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text="üö™ –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥ —Å –ò–ò")]],
            resize_keyboard=True,
            input_field_placeholder="–í–∞—à –≤–æ–ø—Ä–æ—Å –¥–ª—è –ò–ò..."
        )
    
    @staticmethod
    def conversation_menu_with_inline() -> ReplyKeyboardMarkup:
        """–ù–û–í–û–ï: –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ —Å –ò–ò —Å inline –∫–Ω–æ–ø–∫–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
        # –ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—è–µ–º reply –∫–Ω–æ–ø–∫—É –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω—É—é, inline –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ ai_handlers
        return AIKeyboards.conversation_menu()
    
    @staticmethod
    def conversation_inline_only() -> InlineKeyboardMarkup:
        """–ù–û–í–û–ï: –¢–æ–ª—å–∫–æ inline –∫–Ω–æ–ø–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –¥–∏–∞–ª–æ–≥–∞"""
        return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üö™ –ó–∞–≤–µ—Ä—à–∏—Ç—å –¥–∏–∞–ª–æ–≥", callback_data="ai_exit_conversation")]
        ])


class UserKeyboards:
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
    
    @staticmethod
    def welcome_button(button_text: str) -> ReplyKeyboardMarkup:
        """–ö–Ω–æ–ø–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è"""
        return ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text=button_text)]],
            resize_keyboard=True,
            one_time_keyboard=True,
            input_field_placeholder="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ..."
        )
    
    @staticmethod
    def ai_button() -> ReplyKeyboardMarkup:
        """–ö–Ω–æ–ø–∫–∞ –≤—ã–∑–æ–≤–∞ –ò–ò"""
        return ReplyKeyboardMarkup(
            keyboard=[[KeyboardButton(text="ü§ñ –ü–æ–∑–≤–∞—Ç—å –ò–ò")]],
            resize_keyboard=True,
            one_time_keyboard=False,
            input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ..."
        )
    
    @staticmethod
    def goodbye_button(button_text: str, button_url: str) -> InlineKeyboardMarkup:
        """Inline –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ—â–∞–Ω–∏—è"""
        return InlineKeyboardMarkup(
            inline_keyboard=[
                [InlineKeyboardButton(
                    text=button_text,
                    url=button_url
                )]
            ]
        )
