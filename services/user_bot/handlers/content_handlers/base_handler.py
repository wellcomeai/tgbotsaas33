"""
–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å ContentHandler —Å –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å—é —á–µ—Ä–µ–∑ –º–∏–∫—Å–∏–Ω—ã.

‚úÖ –ü–û–õ–ù–ê–Ø –§–£–ù–ö–¶–ò–û–ù–ê–õ–¨–ù–û–°–¢–¨:
1. üé§ –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π —á–µ—Ä–µ–∑ OpenAI Whisper API
2. üîß –£—Ç–∏–ª–∏—Ç—ã —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
3. üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –º–µ—Ç–æ–¥—ã —Ä–∞–±–æ—Ç—ã —Å —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
4. üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞
5. ‚å®Ô∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤—Å–µ—Ö –∫–ª–∞–≤–∏–∞—Ç—É—Ä –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
6. üìä –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∏—Å–µ–ª, –¥–∞—Ç, —Ç–µ–∫—Å—Ç–∞
7. üéØ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
8. ‚ú® –°–æ–∑–¥–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–æ–≤ —Å –≥–æ–ª–æ—Å–æ–≤—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
9. ‚öôÔ∏è –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–æ–≤
10. üìù –†–µ—Ä–∞–π—Ç –ø–æ—Å—Ç–æ–≤ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
11. üì∏ –†–∞–±–æ—Ç–∞ —Å –º–µ–¥–∏–∞ –∏ –∞–ª—å–±–æ–º–∞–º–∏
12. üì§ –ü—É–±–ª–∏–∫–∞—Ü–∏—è –≤ –∫–∞–Ω–∞–ª—ã
"""

import structlog
from services.content_agent import content_agent_service

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤—Å–µ –º–∏–∫—Å–∏–Ω—ã
from .agent_creation import AgentCreationMixin
from .agent_management import AgentManagementMixin
from .rewrite_handlers import RewriteHandlersMixin
from .media_handlers import MediaHandlersMixin
from .voice_handlers import VoiceHandlersMixin
from .channel_handlers import ChannelHandlersMixin
from .utils import ContentUtilsMixin


class ContentHandler(
    AgentCreationMixin,
    AgentManagementMixin, 
    RewriteHandlersMixin,
    MediaHandlersMixin,
    VoiceHandlersMixin,
    ChannelHandlersMixin,
    ContentUtilsMixin
):
    """‚úÖ –ü–æ–ª–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–Ω—Ç–µ–Ω—Ç-–∞–≥–µ–Ω—Ç–æ–≤ —Å –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
    
    –ù–∞—Å–ª–µ–¥—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –æ—Ç –≤—Å–µ—Ö –º–∏–∫—Å–∏–Ω–æ–≤:
    - AgentCreationMixin: —Å–æ–∑–¥–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–æ–≤ —Å –≥–æ–ª–æ—Å–æ–≤—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
    - AgentManagementMixin: —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≥–µ–Ω—Ç–æ–≤
    - RewriteHandlersMixin: —Ä–µ—Ä–∞–π—Ç –ø–æ—Å—Ç–æ–≤ –≤—Å–µ—Ö —Ç–∏–ø–æ–≤
    - MediaHandlersMixin: —Ä–∞–±–æ—Ç–∞ —Å –º–µ–¥–∏–∞ –∏ –∞–ª—å–±–æ–º–∞–º–∏
    - VoiceHandlersMixin: —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    - ChannelHandlersMixin: –ø—É–±–ª–∏–∫–∞—Ü–∏—è –≤ –∫–∞–Ω–∞–ª—ã
    - ContentUtilsMixin: –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —É—Ç–∏–ª–∏—Ç—ã
    """
    
    def __init__(self, db, bot_config: dict, user_bot):
        self.db = db
        self.bot_config = bot_config
        self.bot_id = bot_config['bot_id']
        self.owner_user_id = bot_config['owner_user_id']
        self.bot_username = bot_config['bot_username']
        self.user_bot = user_bot
        self.logger = structlog.get_logger()
        
        self.logger.info("üîß ContentHandler initialized with complete modular architecture", 
                        bot_id=self.bot_id,
                        bot_username=self.bot_username,
                        owner_user_id=self.owner_user_id,
                        voice_support=True,
                        mixins=[
                            'AgentCreationMixin',
                            'AgentManagementMixin', 
                            'RewriteHandlersMixin',
                            'MediaHandlersMixin',
                            'VoiceHandlersMixin',
                            'ChannelHandlersMixin',
                            'ContentUtilsMixin'
                        ])
    
    # ===== –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ =====
    
    async def cb_content_main(self, callback_query):
        """‚úÖ –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∫–æ–Ω—Ç–µ–Ω—Ç-–∞–≥–µ–Ω—Ç–æ–≤ —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º + –≥–æ–ª–æ—Å–æ–≤–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞"""
        self.logger.info("üìù Content main menu accessed", 
                        user_id=callback_query.from_user.id,
                        bot_id=self.bot_id,
                        callback_data=callback_query.data)
        
        await callback_query.answer()
        
        if not self._is_owner(callback_query.from_user.id):
            self.logger.warning("üö´ Access denied for non-owner", 
                               user_id=callback_query.from_user.id,
                               bot_id=self.bot_id)
            await callback_query.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
            return
        
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–≥–µ–Ω—Ç–∞
            self.logger.debug("üîç Checking for existing content agent", bot_id=self.bot_id)
            has_agent = await content_agent_service.has_content_agent(self.bot_id)
            self.logger.info("üìä Content agent check result", bot_id=self.bot_id, has_agent=has_agent)
            
            keyboards = await self._get_content_keyboards()
            
            if has_agent:
                # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –∞–≥–µ–Ω—Ç–µ
                self.logger.debug("üìã Loading agent info", bot_id=self.bot_id)
                agent_info = await content_agent_service.get_agent_info(self.bot_id)
                
                if agent_info:
                    stats = agent_info.get('stats', {})
                    
                    text = f"""
üìù <b>–ö–æ–Ω—Ç–µ–Ω—Ç –∫–∞–Ω–∞–ª–∞ @{self.bot_username}</b>

‚úÖ <b>–ê–≥–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω:</b> {agent_info['name']}
ü§ñ <b>OpenAI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è:</b> {'‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∞' if stats.get('has_openai_id') else '‚ùå –û—à–∏–±–∫–∞'}
üí∞ <b>–¢–æ–∫–µ–Ω–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ:</b> {self._format_number(stats.get('tokens_used', 0))}

üìã <b>–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∞–≥–µ–Ω—Ç–∞:</b>
<i>{self._truncate_text(agent_info['instructions'], 200)}</i>

üéØ <b>–ß—Ç–æ —É–º–µ–µ—Ç –∞–≥–µ–Ω—Ç:</b>
‚Ä¢ üìù –ü–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –≤–∞—à–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º
‚Ä¢ üì∑ –°–æ–∑–¥–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è —Ñ–æ—Ç–æ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∏
‚Ä¢ üé• –°–æ–∑–¥–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –≤–∏–¥–µ–æ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∏
‚Ä¢ üìÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ª—é–±—ã–µ —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤
‚Ä¢ ‚ú® –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–ª—å–±–æ–º—ã (–º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã)
‚Ä¢ üîó –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Å—ã–ª–∫–∏
‚Ä¢ ‚úèÔ∏è –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –∏ –≤–Ω–æ—Å–∏—Ç—å –ø—Ä–∞–≤–∫–∏
‚Ä¢ üì§ –ü—É–±–ª–∏–∫—É–µ—Ç –≥–æ—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã –≤ –∫–∞–Ω–∞–ª—ã
‚Ä¢ üé§ <b>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π</b>
‚Ä¢ ü§ñ –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω —Å –µ–¥–∏–Ω–æ–π —Ç–æ–∫–µ–Ω–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–æ–π

{self._get_supported_content_types()}

<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
"""
                    keyboard = keyboards['main_menu_with_agent']
                    self.logger.info("üìã Agent info loaded successfully", 
                                   bot_id=self.bot_id,
                                   agent_name=agent_info['name'])
                else:
                    text = f"""
üìù <b>–ö–æ–Ω—Ç–µ–Ω—Ç –∫–∞–Ω–∞–ª–∞ @{self.bot_username}</b>

‚ö†Ô∏è <b>–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∞–≥–µ–Ω—Ç–∞</b>

–ê–≥–µ–Ω—Ç —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö, –Ω–æ –Ω–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –µ–≥–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å –∞–≥–µ–Ω—Ç–∞.

<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>
"""
                    keyboard = keyboards['main_menu_with_agent']
                    self.logger.warning("‚ö†Ô∏è Agent exists but failed to load info", bot_id=self.bot_id)
            else:
                text = f"""
üìù <b>–ö–æ–Ω—Ç–µ–Ω—Ç –∫–∞–Ω–∞–ª–∞ @{self.bot_username}</b>

‚ùå <b>–ê–≥–µ–Ω—Ç –Ω–µ —Å–æ–∑–¥–∞–Ω</b>

–î–ª—è —Ä–µ—Ä–∞–π—Ç–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –Ω—É–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å –ò–ò –∞–≥–µ–Ω—Ç–∞:

üéØ <b>–ß—Ç–æ —Ç–∞–∫–æ–µ –∫–æ–Ω—Ç–µ–Ω—Ç-–∞–≥–µ–Ω—Ç:</b>
‚Ä¢ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –ò–ò –¥–ª—è –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–Ω–∏—è –ø–æ—Å—Ç–æ–≤
‚Ä¢ –†–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –±–∞–∑–µ OpenAI GPT-4o
‚Ä¢ –°–ª–µ–¥—É–µ—Ç –≤–∞—à–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –ø–æ —Å—Ç–∏–ª—é
‚Ä¢ üì∑ –†–∞–±–æ—Ç–∞–µ—Ç —Å –õ–Æ–ë–´–ú–ò –º–µ–¥–∏–∞ —Ñ–∞–π–ª–∞–º–∏
‚Ä¢ üé• –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –≤—Å–µ —Ñ–æ—Ä–º–∞—Ç—ã (—Ñ–æ—Ç–æ, –≤–∏–¥–µ–æ, GIF, –∞—É–¥–∏–æ, –¥–æ–∫—É–º–µ–Ω—Ç—ã, —Å—Ç–∏–∫–µ—Ä—ã)
‚Ä¢ ‚ú® –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –∞–ª—å–±–æ–º—ã (–º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã)
‚Ä¢ üîó –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç —Å—Å—ã–ª–∫–∏
‚Ä¢ ‚úèÔ∏è –ü–æ–∑–≤–æ–ª—è–µ—Ç —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –≥–æ—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã
‚Ä¢ üì§ –ü—É–±–ª–∏–∫—É–µ—Ç –≥–æ—Ç–æ–≤—ã–µ –ø–æ—Å—Ç—ã –≤ –∫–∞–Ω–∞–ª—ã
‚Ä¢ üé§ <b>–†–∞–±–æ—Ç–∞–µ—Ç —Å –≥–æ–ª–æ—Å–æ–≤—ã–º–∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏</b>

üìã <b>–ö–∞–∫ —Å–æ–∑–¥–∞—Ç—å:</b>
1. –ù–∞–∂–º–∏—Ç–µ "–°–æ–∑–¥–∞—Ç—å –∞–≥–µ–Ω—Ç–∞" 
2. –£–∫–∞–∂–∏—Ç–µ –∫–∞–Ω–∞–ª –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏
3. –í–≤–µ–¥–∏—Ç–µ –∏–º—è –∞–≥–µ–Ω—Ç–∞
4. –û–ø–∏—à–∏—Ç–µ –∫–∞–∫ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—Ç—å —Ç–µ–∫—Å—Ç—ã (—Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ –≥–æ–ª–æ—Å–æ–º)
5. –ê–≥–µ–Ω—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!

üéØ <b>–ß—Ç–æ –∞–≥–µ–Ω—Ç —É–º–µ–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å:</b>
‚Ä¢ üìù –¢–µ–∫—Å—Ç ‚Üí –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ—Ç —Å–æ–≥–ª–∞—Å–Ω–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º
‚Ä¢ üì∑ –§–æ—Ç–æ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∏ ‚Üí —Å–æ–∑–¥–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ
‚Ä¢ üé• –í–∏–¥–µ–æ –±–µ–∑ –ø–æ–¥–ø–∏—Å–∏ ‚Üí —Å–æ–∑–¥–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ  
‚Ä¢ üìÑ –õ—é–±—ã–µ —Ñ–∞–π–ª—ã ‚Üí —Å–æ–∑–¥–∞–µ—Ç –æ–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ —Ä–µ—Ä–∞–π—Ç –ø–æ–¥–ø–∏—Å–∏
‚Ä¢ üé§ –ì–æ–ª–æ—Å ‚Üí —Ç—Ä–∞–Ω—Å–∫—Ä–∏–±–∏—Ä—É–µ—Ç –∏ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞–µ—Ç
‚Ä¢ ‚ú® –ê–ª—å–±–æ–º—ã ‚Üí –≥—Ä—É–ø–ø–æ–≤–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞

üîß <b>–°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã:</b>
{self._format_system_capabilities()}

<b>–°–æ–∑–¥–∞—Ç—å –∞–≥–µ–Ω—Ç–∞ —Å–µ–π—á–∞—Å?</b>
"""
                keyboard = keyboards['main_menu_no_agent']
                self.logger.info("üìã No agent found, showing creation menu", bot_id=self.bot_id)
            
            await self._safe_edit_or_answer(callback_query, text, keyboard)
            
            self.logger.info("‚úÖ Content main menu displayed successfully with voice support", 
                           bot_id=self.bot_id,
                           has_agent=has_agent)
            
        except Exception as e:
            self.logger.error("üí• Failed to show content main menu", 
                            bot_id=self.bot_id,
                            error=str(e),
                            error_type=type(e).__name__,
                            exc_info=True)
            
            await callback_query.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–Ω—é –∫–æ–Ω—Ç–µ–Ω—Ç–∞", show_alert=True)
