"""
Tools Manager Mixin –¥–ª—è OpenAI Handler
–°–æ–¥–µ—Ä–∂–∏—Ç –ª–æ–≥–∏–∫—É —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ OpenAI Responses API
(–≤–µ–±-–ø–æ–∏—Å–∫, –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä –∫–æ–¥–∞, –ø–æ–∏—Å–∫ –ø–æ —Ñ–∞–π–ª–∞–º, –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)
"""

import structlog
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton

logger = structlog.get_logger()


class ToolsManagerMixin:
    """–ú–∏–∫—Å–∏–Ω –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–º–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞–º–∏ OpenAI"""

    # ===== –£–ü–†–ê–í–õ–ï–ù–ò–ï –ò–ù–°–¢–†–£–ú–ï–ù–¢–ê–ú–ò =====
    
    async def handle_tools_settings(self, callback: CallbackQuery, is_owner_check):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ Responses API"""
        await callback.answer()
        
        if not is_owner_check(callback.from_user.id):
            await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
            return
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
            settings = self.ai_assistant_settings.get('openai_settings', {})
            
            web_search = "‚úÖ" if settings.get('enable_web_search') else "‚ùå"
            code_interpreter = "‚úÖ" if settings.get('enable_code_interpreter') else "‚ùå"
            file_search = "‚úÖ" if settings.get('enable_file_search') else "‚ùå"
            
            vector_stores_count = len(settings.get('vector_store_ids', []))
            file_search_info = f" ({vector_stores_count} —Ö—Ä–∞–Ω–∏–ª–∏—â)" if vector_stores_count > 0 else ""
            
            text = f"""
üß∞ <b>–í—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã Responses API</b>

<b>–¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏:</b>
üåê –í–µ–±-–ø–æ–∏—Å–∫: {web_search}
üêç –ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä –∫–æ–¥–∞: {code_interpreter}
üìÅ –ü–æ–∏—Å–∫ –ø–æ —Ñ–∞–π–ª–∞–º: {file_search}{file_search_info}

<b>–û–ø–∏—Å–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤:</b>

üåê <b>–í–µ–±-–ø–æ–∏—Å–∫</b>
- –ü–æ–∏—Å–∫ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ü–∏—Ç–∞—Ç—ã –∏ —Å—Å—ã–ª–∫–∏
- –°—Ç–æ–∏–º–æ—Å—Ç—å: $25-50 –∑–∞ 1000 –∑–∞–ø—Ä–æ—Å–æ–≤

üêç <b>–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä –∫–æ–¥–∞</b>
- –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ Python –∫–æ–¥–∞
- –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤
- –ú–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è

üìÅ <b>–ü–æ–∏—Å–∫ –ø–æ —Ñ–∞–π–ª–∞–º</b>
- –ü–æ–∏—Å–∫ –≤ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ö
- RAG –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–µ–∫—Ç–æ—Ä–Ω—ã—Ö —Ö—Ä–∞–Ω–∏–ª–∏—â
- –°—Ç–æ–∏–º–æ—Å—Ç—å: $2.50 –∑–∞ 1000 –∑–∞–ø—Ä–æ—Å–æ–≤
"""
            
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text=f"üåê –í–µ–±-–ø–æ–∏—Å–∫ {web_search}", 
                                    callback_data="openai_toggle_web_search")],
                [InlineKeyboardButton(text=f"üêç –ö–æ–¥ {code_interpreter}", 
                                    callback_data="openai_toggle_code_interpreter")],
                [InlineKeyboardButton(text=f"üìÅ –§–∞–π–ª—ã {file_search}", 
                                    callback_data="openai_toggle_file_search")],
                [InlineKeyboardButton(text="üîß –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª—ã", 
                                    callback_data="openai_upload_files")],
                [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="admin_ai")]
            ])
            
            await callback.message.edit_text(text, reply_markup=keyboard)
            
        except Exception as e:
            logger.error("üí• Error showing tools settings", error=str(e))
            await callback.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫", show_alert=True)

    async def handle_toggle_web_search(self, callback: CallbackQuery, is_owner_check):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–µ–±-–ø–æ–∏—Å–∫–∞"""
        await self._toggle_openai_tool(callback, 'web_search', '–í–µ–±-–ø–æ–∏—Å–∫', is_owner_check)

    async def handle_toggle_code_interpreter(self, callback: CallbackQuery, is_owner_check):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–∞ –∫–æ–¥–∞"""
        await self._toggle_openai_tool(callback, 'code_interpreter', '–ò–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä –∫–æ–¥–∞', is_owner_check)

    async def handle_toggle_file_search(self, callback: CallbackQuery, is_owner_check):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –ø–æ —Ñ–∞–π–ª–∞–º"""
        await self._toggle_openai_tool(callback, 'file_search', '–ü–æ–∏—Å–∫ –ø–æ —Ñ–∞–π–ª–∞–º', is_owner_check)

    async def _toggle_openai_tool(self, callback: CallbackQuery, tool_name: str, tool_display_name: str, is_owner_check):
        """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞"""
        await callback.answer()
        
        if not is_owner_check(callback.from_user.id):
            await callback.answer("‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω", show_alert=True)
            return
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            settings = self.ai_assistant_settings.copy()
            openai_settings = settings.get('openai_settings', {})
            
            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç
            setting_key = f'enable_{tool_name}'
            current_value = openai_settings.get(setting_key, False)
            openai_settings[setting_key] = not current_value
            
            settings['openai_settings'] = openai_settings
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ë–î
            await self.db.update_ai_assistant(
                self.bot_id,
                settings=settings
            )
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
            self.ai_assistant_settings = settings
            
            status = "–≤–∫–ª—é—á–µ–Ω" if not current_value else "–≤—ã–∫–ª—é—á–µ–Ω"
            await callback.answer(f"{tool_display_name} {status}")
            
            logger.info("üîß Tool toggled", 
                       tool_name=tool_name,
                       new_status=not current_value,
                       bot_id=self.bot_id)
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –º–µ–Ω—é
            await self.handle_tools_settings(callback, is_owner_check)
            
        except Exception as e:
            logger.error("üí• Error toggling tool", tool=tool_name, error=str(e))
            await callback.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏", show_alert=True)
