"""
Navigation Mixin –¥–ª—è OpenAI Handler
–°–æ–¥–µ—Ä–∂–∏—Ç –ª–æ–≥–∏–∫—É –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É –º–µ–Ω—é –∏ –∫—Ä–∏—Ç–∏—á–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤
"""

import structlog
from aiogram.types import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.context import FSMContext

logger = structlog.get_logger()


class NavigationMixin:
    """–ú–∏–∫—Å–∏–Ω –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –º–µ–∂–¥—É –º–µ–Ω—é"""

    # ===== –ö–†–ò–¢–ò–ß–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –ù–ê–í–ò–ì–ê–¶–ò–ò =====
    
    async def handle_admin_panel(self, callback: CallbackQuery, state: FSMContext):
        """‚úÖ –ù–û–í–´–ô: –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω—É—é –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"""
        logger.info("üè† Returning to admin panel", 
                   user_id=callback.from_user.id,
                   bot_id=self.bot_id)
        
        await state.clear()
        
        text = f"""
üîß <b>–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å –±–æ—Ç–∞ @{self.bot_username}</b>

–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞—à–∏–º –±–æ—Ç–æ–º:
"""
        
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª–∏
        try:
            from ..keyboards import AdminKeyboards
            keyboard = AdminKeyboards.main_menu()
        except Exception as e:
            logger.error("üí• Error importing AdminKeyboards", error=str(e))
            keyboard = InlineKeyboardMarkup(inline_keyboard=[
                [InlineKeyboardButton(text="ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ò–ò", callback_data="admin_ai")],
                [InlineKeyboardButton(text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞", callback_data="admin_settings")],
                [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")]
            ])
        
        await callback.message.edit_text(text, reply_markup=keyboard)
    
    async def handle_exit_conversation(self, callback: CallbackQuery, state: FSMContext):
        """‚úÖ –ù–û–í–´–ô: –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –¥–∏–∞–ª–æ–≥–∞ —Å –ò–ò - –ø–µ—Ä–µ—Ö–æ–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        logger.info("üö™ Exiting AI conversation", 
                   user_id=callback.from_user.id,
                   bot_id=self.bot_id)
        
        await state.clear()
        
        # ‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û: –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤–º–µ—Å—Ç–æ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ò–ò
        await self.handle_admin_ai(callback, state)
    
    async def handle_admin_ai(self, callback: CallbackQuery, state: FSMContext):
        """‚úÖ –ù–û–í–´–ô: –ü–µ—Ä–µ—Ö–æ–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º –ò–ò"""
        logger.info("ü§ñ Going to AI settings", 
                   user_id=callback.from_user.id,
                   bot_id=self.bot_id)
        
        await state.clear()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∞–≥–µ–Ω—Ç–∞ –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        await self._sync_with_db_state()
        
        agent_type = self.ai_assistant_settings.get('agent_type', 'none')
        has_agent = bool(self.ai_assistant_id) and agent_type == 'openai'
        
        await self.show_settings(callback, has_ai_agent=has_agent)
    
    async def handle_admin_main(self, callback: CallbackQuery, state: FSMContext):
        """‚úÖ –ù–û–í–´–ô: –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
        logger.info("üè† Returning to main menu", 
                   user_id=callback.from_user.id,
                   bot_id=self.bot_id)
        
        await state.clear()
        
        text = f"""
ü§ñ <b>–ë–æ—Ç @{self.bot_username}</b>

–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º.
"""
        
        keyboard = InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton(text="üîß –ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å", callback_data="admin_panel")],
            [InlineKeyboardButton(text="ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ò–ò", callback_data="admin_ai")],
            [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="admin_stats")]
        ])
        
        await callback.message.edit_text(text, reply_markup=keyboard)
